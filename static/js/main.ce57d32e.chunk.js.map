{"version":3,"sources":["themes.js","components/d3/BarGraph.js","hooks/useD3.js","components/BodyContent.js","hooks/useInterval.js","App.js","reportWebVitals.js","index.js"],"names":["styles","default","palette","monkeyinpain","background","grey","paper","primary","main","text","secondary","bumble","orange","peachy","contrastText","boba","BarGraph","data","colors","axis","bar","highlight","highlightedPos","animSpeed","dimensions","useRef","width","height","margin","top","right","bottom","left","xScale","yScale","xAxis","g","d","current","m","x","attr","style","call","d3","ticks","tickSizeOuter","tickFormat","split","selectAll","ref","graphFn","dependencies","d3Ref","useEffect","useD3","svg","domain","map","i","range","padding","nice","y","updateRect","empty","filter","join","enter","append","bandwidth","update","transition","duration","exit","remove","select","sortParam","Insertion","pos","ind","step","completed","Selection","posSmall","Bubble","sorted","changes","sortStep","insertion","arr","param","length","copy","insertionStep","selection","selectionStep","bubble","bubbleStep","SettingsDialog","defSpeed","defOrder","isOpen","handleClose","handleConfirm","useState","speed","setSpeed","order","setOrder","close","Dialog","open","onClose","DialogTitle","DialogContent","Typography","gutterBottom","FormControlLabel","control","Switch","color","checked","onChange","event","target","label","Slider","defaultValue","value","min","max","newValue","scale","marks","valueLabelDisplay","DialogActions","Button","onClick","NumberDialog","defRange","defCount","setRange","count","setCount","StyleDialog","setStyle","Object","keys","styleName","BodyContent","dummyData","setDummy","numDialogOpen","setNumDialog","styleDialogOpen","setStyleDialog","settingsDialogOpen","setSettingsDialog","sortMenuAnchor","setSortMenu","sortType","setSortType","sortIndex","setSortIndex","tick","setTick","tickSpeed","setTickSpeed","originalData","sortInfo","theme","useTheme","console","log","resetInterval","newInfo","ord","specials","forEach","key","includes","callback","interval","currCallback","id","setInterval","clearInterval","useInterval","result","callSortStep","AppBar","position","Toolbar","Tooltip","title","IconButton","currentTarget","Menu","keepmounted","Boolean","anchorEl","sort","index","MenuItem","selected","Grid","container","direction","justify","alignItems","spacing","item","newData","len","Array","num","Math","floor","random","randomData","variant","a","b","light","newRange","newCount","newSpeed","newOrder","undefined","App","currentStyle","ThemeProvider","createMuiTheme","CssBaseline","Container","maxWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce57d32e.chunk.js","sourcesContent":["import {orange, grey} from '@material-ui/core/colors'\r\n\r\nconst styles = {\r\n\r\n    default: {\r\n        palette: {\r\n            //background: {default: grey[900]},\r\n        }\r\n    },\r\n\r\n    monkeyinpain: {\r\n        palette: {\r\n            background: {\r\n                default: grey[900],\r\n                paper: grey[900],\r\n            },\r\n            primary: {\r\n                main: \"#e2b714\",\r\n            },\r\n            text: {\r\n                primary: \"#e2b714\",\r\n                secondary: \"#212121\"\r\n            },\r\n          },\r\n    },\r\n    bumble: {\r\n        palette: {\r\n            background: {\r\n                default: grey[900],\r\n                paper: grey[900],\r\n            },\r\n            primary: {\r\n                main: orange[300],\r\n            },\r\n            text: {\r\n                primary: orange[300],\r\n            },\r\n          },\r\n    },\r\n    peachy: {\r\n        palette: {  \r\n\r\n            background: {\r\n                default: \"#EDD8BB\",\r\n                paper: \"#EDD8BB\",\r\n            },\r\n            primary: {\r\n                main: \"#E2AA87\",\r\n                contrastText: \"#EDD8BB\",\r\n            },\r\n            text: {\r\n                primary: \"#E2AA87\",\r\n            }\r\n        }\r\n    },\r\n    boba: {\r\n        palette: {  \r\n\r\n            background: {\r\n                default: \"#EDD8BB\",\r\n                paper: \"#EDD8BB\",\r\n            },\r\n            primary: {\r\n                main: grey[800],\r\n                contrastText: \"#EDD8BB\",\r\n            },\r\n            text: {\r\n                primary: grey[800],\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport {styles};","import { useD3 } from '../../hooks/useD3';\r\nimport React, { useRef } from 'react';\r\nimport * as d3 from \"d3\";\r\n\r\nconst BarGraph = ({ data, colors = { axis: \"black\", bar: \"steelblue\", highlight: \"grey\" }, highlightedPos = null, animSpeed = 750 }) => {\r\n\t/*\r\n\t*Prior changes not using useD3 hook*\r\n\tlet dimensions = {width: 500, height: 500};\r\n\tlet margin = {top: 20, right: 20, bottom: 30, left: 40}\r\n\r\n\tlet x = d3.scaleBand()\r\n\t.domain(data)\r\n\t.range([margin.left, dimensions.width - margin.right])\r\n\t.padding(0.1);\r\n\r\n\tlet y = d3.scaleLinear()\r\n\t.domain([d3.min([...data,0], d => d), d3.max(data, d => d)]).nice()\r\n\t.range([dimensions.height - margin.bottom, margin.top]);\r\n\r\n\tconst createBottomAxis = () => {\r\n\t\t\tconsole.log(\"yes\");\r\n\t\t\tlet xAxis = d3.axisBottom(x).ticks(dimensions.width / 80 ).tickSizeOuter(0);\r\n\t\t\tlet xTransform = 'translate(0, '  + (dimensions.height - margin.bottom) + ')';\r\n\r\n\t\t\tconst xAxisRef = axis => {\r\n\t\t\t\t\taxis && xAxis(d3.select(axis));\r\n\t\t\t};\r\n\t\t\treturn (\r\n\t\t\t\t\t<g transform ={xTransform} ref={xAxisRef}>\r\n\r\n\t\t\t\t\t</g>\r\n\t\t\t)\r\n\t}\r\n\t*/\r\n\tconst dimensions = useRef({ width: 1000, height: 1000 });\r\n\tconst margin = useRef({ top: 20, right: 20, bottom: 30, left: 40 });\r\n\tconst xScale = useRef();\r\n\tconst yScale = useRef();\r\n\r\n\tconst xAxis = (g) => {\r\n\t\tlet d = dimensions.current;\r\n\t\tlet m = margin.current;\r\n\t\tlet x = xScale.current;\r\n\t\tg.attr(\"transform\", `translate(0,${d.height - m.bottom})`)\r\n\t\t\t.style(\"font-size\", \"20px\")\r\n\t\t\t.attr(\"class\", \"x axis\")\r\n\t\t\t.call(d3.axisBottom(x).ticks(d.width / 80).tickSizeOuter(0).tickFormat((d) => { return d.split(\"-\")[0] }))\r\n\t\t\t.selectAll(\"text\").attr(\"fill\", colors.axis);\r\n\r\n\t\t/*\r\n\t\t.call(g => g.append(\"text\")\r\n\t\t.attr(\"x\", d.width - m.right)\r\n\t\t.attr(\"y\", -4)\r\n\t\t.attr(\"fill\", \"currentcolor\")\r\n\t\t.attr(\"font-weight\", \"bold\")\r\n\t\t.attr(\"text-anchor\", \"end\")\r\n\t\t.text(\"Hello\"));\r\n\t\t*/\r\n\t}\r\n\t/*\r\n\tconst yAxis = (g) => {\r\n\t\t\tg.attr(\"transform\", `translate(${margin.left},0)`)\r\n\t\t\t\t\t.call(d3.axisLeft(y).ticks(dimensions.height / 40))\r\n\t\t\t\t\t.call(g => g.select(\".domain\").remove())\r\n\t\t\t\t\t.call(g => g.select(\".tick:last-of-type text\").clone()\r\n\t\t\t\t\t.attr(\"x\", 4)\r\n\t\t\t\t\t.attr(\"text-anchor\", \"start\")\r\n\t\t\t\t\t.attr(\"font-weight\", \"bold\")\r\n\t\t\t\t\t.text(\"World\"));\r\n\t}\r\n\t*/\r\n\t//Initializing the graph\r\n\tconst ref = useD3(\r\n\t\t(svg) => {\r\n\t\t\t/*\r\n\t\t\tlet x = d3.scaleBand()\r\n\t\t\t\t\t.domain(data)\r\n\t\t\t\t\t.range([margin.left, dimensions.width - margin.right])\r\n\t\t\t\t\t.padding(0.1);\r\n  \r\n\t\t\tlet y = d3.scaleLinear()\r\n\t\t\t\t\t.domain([d3.min([...data,0], d => d), d3.max(data, d => d)]).nice()\r\n\t\t\t\t\t.range([dimensions.height - margin.bottom, margin.top]);\r\n  \r\n\t\t\tlet xAxis = (g) => g\r\n\t\t\t.attr(\"transform\", `translate(0,${dimensions.height - margin.bottom})`)\r\n\t\t\t.call(d3.axisBottom(x).ticks(dimensions.width / 80 ).tickSizeOuter(0))\r\n\t\t\t.call(g => g.append(\"text\")\r\n\t\t\t\t\t.attr(\"x\", dimensions.width - margin.right)\r\n\t\t\t\t\t.attr(\"y\", -4)\r\n\t\t\t\t\t.attr(\"fill\", \"currentcolor\")\r\n\t\t\t\t\t.attr(\"font-weight\", \"bold\")\r\n\t\t\t\t\t.attr(\"text-anchor\", \"end\")\r\n\t\t\t\t\t.text(\"Hello\"));\r\n\t\t\tlet yAxis = (g) => g\r\n\t\t\t.attr(\"transform\", `translate(${margin.left},0)`)\r\n\t\t\t.call(d3.axisLeft(y).ticks(dimensions.height / 40))\r\n\t\t\t.call(g => g.select(\".domain\").remove())\r\n\t\t\t.call(g => g.select(\".tick:last-of-type text\").clone()\r\n\t\t\t\t\t.attr(\"x\", 4)\r\n\t\t\t\t\t.attr(\"text-anchor\", \"start\")\r\n\t\t\t\t\t.attr(\"font-weight\", \"bold\")\r\n\t\t\t\t\t.text(\"World\"));\r\n\t\t\t*/\r\n\t\t\txScale.current = d3.scaleBand()\r\n\t\t\t\t.domain(data.map((d, i) => { return d + \"-\" + i }))\r\n\t\t\t\t.range([margin.current.left, dimensions.current.width - margin.current.right])\r\n\t\t\t\t.padding(0.1);\r\n\r\n\t\t\tyScale.current = d3.scaleLinear()\r\n\t\t\t\t.domain([d3.min([...data, 0], d => d), d3.max(data, d => d)]).nice()\r\n\t\t\t\t.range([dimensions.current.height - margin.current.bottom, margin.current.top])\r\n\r\n\t\t\tlet x = xScale.current;\r\n\t\t\tlet y = yScale.current;\r\n\r\n\t\t\tconst updateRect = svg.selectAll('rect')\r\n\t\t\t\t.data(data);\r\n\r\n\t\t\tif (highlightedPos !== null && !(updateRect.empty())) {\r\n\t\t\t\tupdateRect.filter((d, i) => {return i === highlightedPos})\r\n\t\t\t\t\t.attr(\"fill\", colors.highlight);\r\n\t\t\t}\r\n\r\n\t\t\tupdateRect.join(\r\n\t\t\t\tenter => {\r\n\t\t\t\t\tenter.append(\"rect\")\r\n\t\t\t\t\t\t.attr(\"x\", (d, i) => x(d + \"-\" + i))\r\n\t\t\t\t\t\t.attr(\"width\", x.bandwidth())\r\n\t\t\t\t\t\t.attr(\"y\", d => y(d))\r\n\t\t\t\t\t\t.attr(\"height\", d => y(0) - y(d))\r\n\t\t\t\t\t\t.attr(\"fill\", colors.bar)\r\n\t\t\t\t},\r\n\t\t\t\tupdate => {\r\n\t\t\t\t\tif (highlightedPos !== null) {\r\n\t\t\t\t\t\tupdate.filter((d, i) => {return i === highlightedPos})\r\n\t\t\t\t\t\t.attr(\"fill\", colors.highlight);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tupdate.call(update => {\r\n\t\t\t\t\t\tupdate.filter((d, i) => {return i !== highlightedPos})\r\n\t\t\t\t\t\t\t.attr(\"fill\", colors.bar);\r\n\t\t\t\t\t\tupdate.transition(svg.transition().duration(animSpeed))\r\n\t\t\t\t\t\t\t.attr(\"x\", (d, i) => x(d + \"-\" + i))\r\n\t\t\t\t\t\t\t.attr(\"width\", x.bandwidth())\r\n\t\t\t\t\t\t\t.attr(\"y\", d => y(d))\r\n\t\t\t\t\t\t\t.attr(\"height\", d => y(0) - y(d))\r\n\t\t\t\t\t\t\t//.attr(\"fill\", colors.bar)\r\n\t\t\t\t\t})\r\n\t\t\t\t},\r\n\t\t\t\texit => {\r\n\t\t\t\t\texit.remove()\r\n\t\t\t\t});\r\n\t\t\t\r\n\t\t\tlet axis = svg.select(\"g.x.axis\");\r\n\t\t\tif (axis.empty()) {\r\n\t\t\t\tsvg.append(\"g\")\r\n\t\t\t\t\t.call(xAxis);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\taxis.selectAll(\"text\").attr(\"fill\", colors.axis);\r\n\t\t\t\taxis.transition()\r\n\t\t\t\t\t.duration(animSpeed)\r\n\t\t\t\t\t.call(d3.axisBottom(x).ticks(dimensions.current.width / 80).tickSizeOuter(0).tickFormat((d) => { return d.split(\"-\")[0] }))\r\n\t\t\t\t\t.selectAll(\"text\").attr(\"fill\", colors.axis);\r\n\t\t\t}\r\n\t\t\t/*\r\n\t\t\tsvg.append(\"g\")\r\n\t\t\t\t\t.call(yAxis);\r\n\t\t\t*/\r\n\t\t}\r\n\t\t, [data, colors]);\r\n\t/*\r\n\tuseEffect(() => {\r\n\t\t\txScale.current = d3.scaleBand()\r\n\t\t\t.domain(sortedData)\r\n\t\t\t.range([margin.current.left, dimensions.current.width - margin.current.right])\r\n\t\t\t.padding(0.1);\r\n\r\n\t\t\tlet x = xScale.current;\r\n\t\t\tlet d = dimensions.current;\r\n\r\n\t\t\tconst updateRect = d3.select(ref.current).selectAll(\"rect\")\r\n\t\t\t\t\t.data(data);\r\n\t\t\tupdateRect.join(\r\n\t\t\t\t\tenter => {\r\n\r\n\t\t\t\t\t},\r\n\t\t\t\t\tupdate => {\r\n\t\t\t\t\t\t\tupdate.call(update => update.transition(d3.select(ref.current).transition().duration(750)).attr(\"x\", d => x(d)))\r\n\t\t\t\t\t}\r\n\t\t\t)\r\n\r\n\t\t\td3.select(ref.current).select(\"g.x.axis\")\r\n\t\t\t\t\t.transition()\r\n\t\t\t\t\t.duration(750)\r\n\t\t\t\t\t.call(d3.axisBottom(x).ticks(d.width / 80 ).tickSizeOuter(0));\r\n\t},[sortedData]);\r\n\t*/\r\n\treturn (\r\n\t\t<svg\r\n\t\t\tref={ref}\r\n\t\t\tstyle={{\r\n\t\t\t\theight: 1000,\r\n\t\t\t\twidth: 1000\r\n\t\t\t}}\r\n\t\t/>\r\n\t)\r\n\t/*\r\n\t*For prior changes not using D3 Hook*\r\n\t\t\t\t\t\t\t{createBottomAxis()}\r\n\t\t\t\t\t{data.map((num) => (\r\n\t\t\t\t\t\t\t<rect x={x(num)} width={dimensions.width / (2 * data.length)} y={y(num)} height={y(0) - y(num)} fill=\"steelblue\"/>\r\n\t\t\t\t\t))}\r\n  \r\n\t*/\r\n}\r\n\r\nexport { BarGraph };","import {useEffect, useRef} from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst useD3 = (graphFn, dependencies) => {\r\n    const d3Ref = useRef();\r\n\r\n    useEffect(() => {\r\n        graphFn(d3.select(d3Ref.current));\r\n        return () => {};\r\n    }, dependencies);\r\n\r\n    return d3Ref;\r\n} \r\nexport {useD3};","import React, { useState, useRef } from 'react';\r\nimport { BarGraph } from './d3/BarGraph';\r\nimport { Button, IconButton, AppBar, Toolbar, Dialog, DialogTitle, DialogActions, DialogContent, Menu, MenuItem, Slider, Switch, FormControlLabel, Typography, Grid, Tooltip } from '@material-ui/core'\r\nimport TuneIcon from '@material-ui/icons/Tune';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\r\nimport PauseCircleFilledIcon from '@material-ui/icons/PauseCircleFilled';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { useInterval } from '../hooks/useInterval';\r\n\r\nconst randomData = (range, count) => {\r\n  let len = count;\r\n  return [...Array(len).keys()].map((num) => {\r\n    return Math.floor(Math.random() * (range[1] - range[0] + 1)) + range[0];\r\n  });\r\n}\r\n\r\nconst sortParam = {\r\n  Insertion: {\r\n    pos: 1,\r\n    ind: 1,\r\n    step: 1,\r\n    completed: false,\r\n  },\r\n  Selection: {\r\n    pos: 0,\r\n    posSmall: 0,\r\n    ind: 0,\r\n    step: 1,\r\n    completed: false,\r\n  },\r\n  Bubble: {\r\n    pos: 0,\r\n    step: 1,\r\n    sorted: 0,\r\n    changes: false,\r\n    completed: false,\r\n  }\r\n}\r\n\r\nconst insertionStep = (arr, param) => {\r\n  if ((param.pos - param.step > -1  && param.pos - param.step < arr.length) && arr[param.pos] < arr[param.pos - param.step]) {\r\n    let copy = arr[param.pos - param.step];\r\n    arr[param.pos - param.step] = arr[param.pos];\r\n    arr[param.pos] = copy;\r\n    param.pos = param.pos - param.step;\r\n  }\r\n  else {\r\n    param.ind = param.ind + param.step;\r\n    param.pos = param.ind;\r\n  }\r\n  if ((param.ind >= arr.length && param.step === 1) || (param.ind < 0 && param.step === -1)) {\r\n    param.completed = true;\r\n  }\r\n  return {arr, param};\r\n}\r\n\r\nconst selectionStep = (arr, param) => {\r\n  if (param.pos < arr.length && param.pos > -1) {  \r\n    if (arr[param.pos] < arr[param.posSmall]) {\r\n      param.posSmall = param.pos;\r\n    }\r\n    param.pos = param.pos + param.step;\r\n  }\r\n  else {\r\n    let copy = arr[param.ind];\r\n    arr[param.ind] = arr[param.posSmall];\r\n    arr[param.posSmall] = copy;\r\n    param.ind = param.ind + param.step;\r\n    param.posSmall = param.ind;\r\n    param.pos = param.ind;\r\n  }\r\n  if ((param.ind >= arr.length - 1 && param.step === 1) || (param.ind <= 0 && param.step === -1)) {\r\n    param.completed = true;\r\n  }\r\n  return {arr, param};\r\n}\r\n\r\nconst bubbleStep = (arr, param) => {\r\n  if ((param.pos < arr.length - 1 - param.sorted && param.step === 1) || (param.pos > 0 + param.sorted && param.step === -1)) {\r\n    if (arr[param.pos + param.step] <arr[param.pos]) {\r\n      param.changes = true;\r\n      let copy = arr[param.pos + param.step];\r\n      arr[param.pos + param.step] = arr[param.pos];\r\n      arr[param.pos] = copy;\r\n    }\r\n    param.pos += param.step;\r\n  }\r\n  else {\r\n    if (param.changes) {\r\n      param.sorted += 1;\r\n      param.pos = (param.step === 1) ? 0 : arr.length - 1;\r\n      param.changes = false;\r\n    }\r\n    else {\r\n      param.completed = true;\r\n    }\r\n  }\r\n  return {arr, param};\r\n}\r\n\r\nconst sortStep = {\r\n  insertion: (arr, param) => {return insertionStep(arr, param)},\r\n  selection: (arr, param) => {return selectionStep(arr, param)},\r\n  bubble: (arr, param) => {return bubbleStep(arr, param)},\r\n}\r\n\r\nconst callSortStep = (arr, param, sortType) => {\r\n  return (sortStep[sortType])(arr, param);\r\n}\r\n\r\nconst SettingsDialog = ({defSpeed, defOrder, isOpen, handleClose, handleConfirm}) => {\r\n\r\n  const [speed, setSpeed] = useState(defSpeed);\r\n  const [order, setOrder] = useState(defOrder);\r\n\r\n  const marks = [\r\n    {\r\n      value: 100,\r\n      label: \".1 sec\",\r\n    },\r\n    {\r\n      value: 1000,\r\n      label: \"1 sec\",\r\n    }\r\n  ]\r\n\r\n  const close = () => {\r\n    setSpeed(defSpeed);\r\n    setOrder(defOrder);\r\n    handleClose();\r\n  }\r\n\r\n\r\n  return (\r\n    <Dialog open={isOpen} onClose={close}>\r\n      <DialogTitle>Settings</DialogTitle>\r\n      <DialogContent>\r\n        <Typography gutterBottom>Sorting Order</Typography>\r\n        <FormControlLabel\r\n          control={<Switch color=\"primary\" checked={order} onChange={(event) => {setOrder(event.target.checked)}}></Switch>}\r\n          label={order ? \"Ascending\" : \"Descending\"}\r\n        />\r\n        <Typography gutterBottom>Sorting Interval</Typography>\r\n        <Slider defaultValue={defSpeed} value={speed} min={100} max={1000} onChange={(event, newValue) => { setSpeed(newValue) }} scale={(x) => {return x / 1000}} marks={marks} valueLabelDisplay=\"auto\"/>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={close}>Cancel</Button>\r\n\t\t\t\t<Button onClick={() => { handleConfirm(speed, order) }}>Confirm</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nconst NumberDialog = ({ defRange, defCount, isOpen, handleClose, handleConfirm }) => {\r\n\r\n\tconst [range, setRange] = useState(defRange);\r\n\tconst [count, setCount] = useState(defCount);\r\n\r\n\tconst close = () => {\r\n\t\tsetRange(defRange);\r\n\t\tsetCount(defCount);\r\n\t\thandleClose();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Dialog open={isOpen} onClose={close}>\r\n\t\t\t<DialogTitle>Number Generation Settings</DialogTitle>\r\n\t\t\t<DialogContent>\r\n\t\t\t\t<Typography gutterBottom>Range</Typography>\r\n\t\t\t\t<Slider defaultValue={defRange} value={range} min={0} max={50} onChange={(event, newValue) => { setRange(newValue) }} valueLabelDisplay=\"auto\" />\r\n\t\t\t\t<Typography gutterBottom>Count</Typography>\r\n\t\t\t\t<Slider defaultValue={defCount} value={count} min={2} max={40} onChange={(event, newValue) => { setCount(newValue) }} valueLabelDisplay=\"auto\" />\r\n\t\t\t</DialogContent>\r\n\t\t\t<DialogActions>\r\n\t\t\t\t<Button onClick={close}>Cancel</Button>\r\n\t\t\t\t<Button onClick={() => { handleConfirm(range, count) }}>Confirm</Button>\r\n\t\t\t</DialogActions>\r\n\t\t</Dialog>\r\n\t)\r\n}\r\nconst StyleDialog = ({styles, setStyle, isOpen, handleClose}) => {\r\n\treturn (\r\n\t\t<Dialog open={isOpen} onClose={() => {handleClose()}}>\r\n\t\t\t<DialogTitle>Themes</DialogTitle>\r\n\t\t\t<DialogContent>\r\n\t\t\t\t{Object.keys(styles).map((styleName) => {\r\n\t\t\t\t\treturn (<Button key={styleName} onClick={() => {setStyle(styleName)}}>{styleName}</Button>)\r\n\t\t\t\t})}\r\n\t\t\t</DialogContent>\r\n\t\t</Dialog>\r\n\t)\r\n}\r\nconst BodyContent = ({styles, setStyle}) => {\r\n\tconst [dummyData, setDummy] = useState([16, 4, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 13]);\r\n\tconst [range, setRange] = useState([0, 16]);\r\n\tconst [count, setCount] = useState(15)\r\n\tconst [numDialogOpen, setNumDialog] = useState(false);\r\n  const [styleDialogOpen, setStyleDialog] = useState(false);\r\n  const [settingsDialogOpen, setSettingsDialog] = useState(false);\r\n  const [sortMenuAnchor, setSortMenu] = useState(null);\r\n  const [sortType, setSortType] = useState(\"Insertion\");\r\n  const [sortIndex, setSortIndex] = useState(0);\r\n  const [tick, setTick] = useState(0);\r\n  const [tickSpeed, setTickSpeed] = useState(100);\r\n  const [order, setOrder] = useState(true);\r\n\r\n  const originalData = useRef([...dummyData]);\r\n  const sortInfo = useRef({...(sortParam.insertion)});\r\n  const highlightedPos = useRef(null);\r\n\r\n\tconst theme = useTheme();\r\n\tconsole.log(theme);\r\n\r\n\tconst setNumbers = (newRange, newCount) => {\r\n\t\tsetNumDialog(false);\r\n\t\tsetRange(newRange);\r\n\t\tsetCount(newCount);\r\n\t}\r\n\r\n  const setSettings = (newSpeed, newOrder) => {\r\n    setSettingsDialog(false);\r\n    if (order !== newOrder ) {\r\n      resetInterval(undefined, newOrder);\r\n      setDummy(originalData.current);\r\n      setOrder(newOrder);\r\n    }\r\n    setTickSpeed(newSpeed);\r\n    if (order === newOrder && tick !== 0) {\r\n      setTick(newSpeed);\r\n    }\r\n  }\r\n\r\n  const startInterval = () => {\r\n    if (!sortInfo.current.completed) {\r\n      highlightedPos.current = sortInfo.current.pos;\r\n      setTick(tickSpeed);\r\n    }\r\n  }\r\n\r\n  const resetInterval = (newInfo={...(sortParam[sortType])}, ord=order, data=originalData.current) => {\r\n    setTick(0);\r\n    if (!ord) {\r\n      let specials = [\"pos\", \"posSmall\", \"ind\"]\r\n      Object.keys(newInfo).forEach((key) => {\r\n        if (specials.includes(key)) {\r\n          newInfo[key] = data.length - newInfo[key] - 1;\r\n        }\r\n        else if (key === \"step\") {\r\n          newInfo[key] = newInfo[key] * -1;\r\n        }\r\n      });\r\n      console.log(newInfo);\r\n    }\r\n    sortInfo.current = newInfo;\r\n    highlightedPos.current = null;\r\n  }\r\n\r\n  useInterval(() => {\r\n    if (!sortInfo.current.completed) {\r\n      let result = callSortStep([...dummyData], sortInfo.current, sortType);\r\n      sortInfo.current = result.param;\r\n      highlightedPos.current = sortInfo.current.pos;\r\n      setDummy(result.arr);\r\n    }\r\n    else {\r\n      highlightedPos.current = null;\r\n      setTick(0);\r\n    }\r\n  }, tick);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<AppBar position=\"fixed\">\r\n\t\t\t\t<Toolbar>\r\n          <Tooltip title=\"Sorts\">\r\n            <IconButton color=\"inherit\" onClick={(event) => { setSortMenu(event.currentTarget) }}>\r\n              <BarChartIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Menu \r\n            keepmounted open={Boolean(sortMenuAnchor)} \r\n            anchorEl={sortMenuAnchor}\r\n            onClose={() => { setSortMenu(null) }}\r\n          >\r\n            {Object.keys(sortParam).map((sort, index) => {\r\n              return (\r\n                <MenuItem key={sort} selected={index === sortIndex} onClick={() => { resetInterval({...(sortParam[sort])}); setSortType(sort); setSortIndex(index); setDummy(originalData.current) }}>\r\n                  {sort}\r\n                </MenuItem>\r\n              )\r\n            })}\r\n          </Menu>\r\n          <Tooltip title=\"Number Generation Settings\">\r\n            <IconButton color=\"inherit\" onClick={() => { setNumDialog(true) }}>\r\n              <TuneIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Themes\">\r\n            <IconButton color=\"inherit\" onClick={() => { setStyleDialog(true) }}>\r\n              <ColorLensIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Settings\">\r\n            <IconButton color=\"inherit\" onClick={() => { setSettingsDialog(true)}}>\r\n              <SettingsIcon/>\r\n            </IconButton>\r\n          </Tooltip>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t\t<Toolbar />\r\n\t\t\t<Grid container direction=\"row\" justify=\"space-evenly\" alignItems=\"center\" spacing={1}>\r\n\t\t\t\t<Grid item>\r\n\t\t\t\t\t<Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={1}>\r\n\t\t\t\t\t\t<Grid item>\r\n              <Button onClick={() => { let newData = randomData(range, count); resetInterval(); setDummy(newData); originalData.current = [...newData] }} variant=\"contained\" color=\"primary\">Randomize</Button>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<Button onClick={() => { let newData = [...dummyData]; resetInterval(...Array(2),newData); setDummy(newData.sort(order ? (a, b) => a - b : (a, b) => b - a)); sortInfo.current.completed = true }} variant=\"contained\" color=\"primary\">Finish Sort</Button>\r\n\t\t\t\t\t\t</Grid>\r\n            <Grid item>\r\n\t\t\t\t\t\t\t<Button onClick={() => { resetInterval(); setDummy(originalData.current)}} variant=\"contained\" color=\"primary\">Reset Sort</Button>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item>\r\n              <Tooltip title={(tick === 0) ? (\"Play Sort\") : (\"Pause Sort\")}>\r\n                <IconButton onClick={() => {(tick === 0) ? (startInterval()) : (setTick(0))}} color=\"primary\">\r\n                  {(tick === 0) ? <PlayCircleFilledIcon/> : <PauseCircleFilledIcon/>}\r\n                </IconButton>\r\n              </Tooltip>\r\n\t\t\t\t\t\t</Grid>\t\t\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item>\r\n\t\t\t\t\t<BarGraph\r\n\t\t\t\t\t\tdata={dummyData} colors={{ axis: theme.palette.primary.main, bar: theme.palette.primary.main, highlight: theme.palette.primary.light }} highlightedPos = {highlightedPos.current} animSpeed = {tickSpeed * .75}/>\r\n\t\t\t\t</Grid>\r\n        <Grid item>\r\n          <Grid container container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={1}>\r\n            <Grid item>\r\n              <Typography variant=\"h1\">{sortType}</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"body1\">This is {sortType}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<NumberDialog defRange={range} defCount={count} isOpen={numDialogOpen} handleClose={() => { setNumDialog(false) }} handleConfirm={setNumbers} />\r\n\t\t\t<StyleDialog styles={styles} setStyle={(styleName) => {setStyle(styleName)}} isOpen={styleDialogOpen} handleClose={() => { setStyleDialog(false)}}/>\r\n      <SettingsDialog defSpeed={tickSpeed} defOrder={order} isOpen={settingsDialogOpen} handleClose={() => { setSettingsDialog(false) }} handleConfirm={setSettings}/>\r\n\t\t</>\r\n\t) \r\n}\r\n\r\nexport default BodyContent;","import {useEffect, useRef} from 'react';\r\n\r\nconst useInterval = (callback, interval) => {\r\n    const currCallback = useRef();\r\n\r\n    useEffect(() =>  {\r\n        currCallback.current = callback;\r\n    }, [callback]);\r\n\r\n    useEffect(() => {\r\n        if (interval !== null && interval !== 0) {\r\n            let id = setInterval(() => {currCallback.current()}, interval);\r\n            return () => {clearInterval(id)};\r\n        }\r\n    }, [interval]);\r\n}\r\n\r\nexport {useInterval};","import {styles} from './themes.js';\nimport {Container, CssBaseline} from '@material-ui/core'\nimport {useState} from 'react';\nimport {ThemeProvider, createMuiTheme} from '@material-ui/core/styles';\nimport BodyContent from './components/BodyContent';\n\nconst App = () => {\n\n  const [currentStyle, setStyle] = useState(styles.default);\n\n\n  return (\n    <ThemeProvider theme={createMuiTheme(currentStyle)}>\n      <CssBaseline/>\n      <Container maxWidth={false}>\n        <BodyContent styles={styles} setStyle={(styleName) => {setStyle(styles[styleName])}}/>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}